apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{.Release.Name}}
  namespace: {{.Release.Namespace}}
  labels:
    app.kubernetes.io/name: {{.Chart.Name}}
    app.kubernetes.io/instance: {{.Release.Name}}
spec:
  serviceName: cluster
  podManagementPolicy: Parallel
  replicas: 3
  updateStrategy:
    type: OnDelete
  selector:
    matchLabels:
      app.kubernetes.io/name: {{.Chart.Name}}
      app.kubernetes.io/instance: {{.Release.Name}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{.Chart.Name}}
        app.kubernetes.io/instance: {{.Release.Name}}
    spec:
      serviceAccountName: {{.Release.Name}}
      terminationGracePeriodSeconds: 10
      securityContext:
        runAsNonRoot: true
        runAsUser: 100
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: vault
          image: "hashicorp/vault:{{ .Values.vault_ver }}"
          imagePullPolicy: IfNotPresent
          command: ["/usr/bin/dumb-init", "/bin/vault", "server", "-config", "/vault/config/server.hcl"]
          ports:
            - name: data
              protocol: TCP
              containerPort: 8200
            - name: cluster
              protocol: TCP
              containerPort: 8201
          env:
            - name: VAULT_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: HOSTNAME
              value: $(VAULT_K8S_POD_NAME).cluster
            - name: HOME
              value: /home/vault
            - name: VAULT_ADDR
              value: https://$(HOSTNAME):8200
            - name: VAULT_API_ADDR
              value: https://$(HOSTNAME):8200
            - name: VAULT_CLUSTER_ADDR
              value: https://$(HOSTNAME):8201
            - name: VAULT_CLIENT_CERT
              value: /vault/certs/tls.crt
            - name: VAULT_CLIENT_KEY
              value: /vault/certs/tls.key
            - name: VAULT_CACERT
              value: /vault/certs/tls.ca
          readinessProbe:
            exec:
              command: ["/bin/sh", "-ec", "vault status"]
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 3
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: home
              mountPath: /home/vault
              readOnly: false
            - name: server-config
              mountPath: /vault/config
              readOnly: true
            - name: tls-certs
              mountPath: /vault/certs
              readOnly: true
            - name: data
              mountPath: /vault/data
              readOnly: false
      volumes:
        - name: home
          emptyDir: {}
        - name: server-config
          configMap:
            name: server-config
            defaultMode: 420
        - name: tls-certs
          secret:
            secretName: tls-certs
            defaultMode: 420
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
        volumeMode: Filesystem
